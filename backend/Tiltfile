# -*- mode: Python -*-

# For more on Extensions, see: https://docs.tilt.dev/extensions.html
load('ext://restart_process', 'docker_build_with_restart')

# Records the current time, then kicks off a server update.
# Normally, you would let Tilt do deploys automatically, but this
# shows you how to set up a custom workflow that measures it.
# local_resource(
#     'deploy',
#     'python ./record-start-time.py',
#     deps=['./record-start-time.py'],
# )

local_resource(
    'tool-restore-back',
    'dotnet tool restore',
    labels=['back', 'app1']
)

local_resource(
    'build-back',
    'dotnet publish -c Debug -o out',
    deps=['TiltDemoApi'],
    ignore=['TiltDemoApi/obj', 'TiltDemoApi/bin'],
    resource_deps=['tool-restore-back'],
    labels=['back', 'app1']
)

local_resource(
    'script-back',
    'cp ./script.sh ./out/script.sh',
    resource_deps=['build-back'],
    labels=['back', 'app1']
)

local_resource(
    'db-update-back',
    'cd TiltDemoApi && dotnet ef database update',
    resource_deps=['script-back', 'mssql'],
    labels=['back', 'app1']
)

docker_build_with_restart(
    'hello-tilt-back1',
    'out',
    entrypoint=['./script.sh'],
    dockerfile='Dockerfile',
    live_update=[
        sync('out', '/app/out'),
    ],
)

k8s_yaml('kubernetes.yaml', allow_duplicates=True)
k8s_resource('hello-tilt-back1', port_forwards=['8083:80', '22000:22'], resource_deps=['db-update-back'], labels=['back', 'app1'])
