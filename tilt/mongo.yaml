apiVersion: v1
kind: Namespace
metadata:
  name: mongodb
---
apiVersion: v1
kind: Secret
metadata:
  name: secrets
  namespace: mongodb
type: Opaque
stringData:
  MONGO_INITDB_ROOT_PASSWORD: 'Password1.'
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-headless
  namespace: mongodb
spec:
  ports:
  - port: 27017
  clusterIP: None
  selector:
    app: mongo
---
apiVersion: v1
kind: Service
metadata:
  name: mongo
  namespace: mongodb
spec:
  type: NodePort
  ports:
  - port: 27017
    nodePort: 30017
  selector:
    statefulset.kubernetes.io/pod-name: mongo-0
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
  namespace: mongodb
spec:
  selector:
    matchLabels:
      app: mongo
  serviceName: "mongo-headless"
  replicas: 1
  template:
    metadata:
      labels:
        app: mongo
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: waitforit
        image: mongo:latest
        command: ["bash", "-c", "mongosh --eval \"try{ let s = rs.status(); if(s.ok == 1) console.log(s); }catch(ex){ if(ex.code == 94) rs.initiate({ _id: 'rs0', members: [{ _id: 0, host: 'localhost:27017' }]}); else throw ex; }\" && echo 'succeeded rs' && tail -f /dev/null"]
      - name: mongo
        image: mongo:latest
        ports:
        - containerPort: 27017
        args: ['--replSet=rs0']
        # env:
        # - name: MONGO_INITDB_ROOT_USERNAME
        #   value: "root"
        # - name: MONGO_INITDB_ROOT_PASSWORD
        #   valueFrom:
        #     secretKeyRef:
        #       name: secrets
        #       key: MONGO_INITDB_ROOT_PASSWORD
        #       optional: false
        volumeMounts:
        - name: mongo-data
          mountPath: /data/db
        livenessProbe:
          exec:
            command: ["bash", "-c", "mongosh --eval \"db.adminCommand('ping')\""]
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command: ["bash", "-c", "mongosh --eval \"db.adminCommand('ping')\""]
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
  volumeClaimTemplates:
  - metadata:
      name: mongo-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "local-path"
      resources:
        requests:
          storage: 1Gi
