# -*- mode: Python -*-

# For more on Extensions, see: https://docs.tilt.dev/extensions.html
load('ext://restart_process', 'docker_build_with_restart')

entryhttpurl = os.getenv('entryhttpurl')
os.putenv('BACK1_URL', '{entryhttpurl}/back1'.format(entryhttpurl=entryhttpurl))

local_resource(
    'pkgs-front',
    'npm install',
    labels=['front']
)

local_resource(
    'create-dist-front',
    'mkdir -p ./dist',
    resource_deps=['pkgs-front'],
    labels=['front']
)

local_resource(
    'validate-build-front',
    """if [ -f dist/frontend/stats.json ]; then if [ "$(grep -c '"errorsCount":0' dist/frontend/stats.json)" = "1" ]; then echo 'build succeeded'; else echo 'build failed'; exit 1; fi; else echo 'stats not found'; fi""",
    deps=['dist/frontend/stats.json'],
    resource_deps=['create-dist-front'],
    labels=['front']
)

local_resource(
    'build-front',
    serve_cmd='npm run build:tilt',
    resource_deps=['create-dist-front'],
    labels=['front']
)

local_resource(
    'script-front',
    'cp ./nginx.conf ./dist',
    deps=['nginx.conf'],
    resource_deps=['create-dist-front'],
    labels=['front']
)

docker_build_with_restart(
    'hello-tilt-front',
    'dist',
    entrypoint=["/docker-entrypoint.sh", "nginx", "-g", "daemon off;"],
    dockerfile='Dockerfile',
    live_update=[
        sync('dist/frontend', '/usr/share/nginx/html'),
    ],
)

k8s_yaml(kustomize('.'), allow_duplicates=True)
k8s_resource('hello-tilt-front', resource_deps=['script-front'], labels=['front'])