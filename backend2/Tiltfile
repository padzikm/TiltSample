# -*- mode: Python -*-

# For more on Extensions, see: https://docs.tilt.dev/extensions.html
load('ext://restart_process', 'docker_build_with_restart')

# Records the current time, then kicks off a server update.
# Normally, you would let Tilt do deploys automatically, but this
# shows you how to set up a custom workflow that measures it.
# local_resource(
#     'deploy',
#     'python ./record-start-time.py',
#     deps=['./record-start-time.py'],
# )
buildconf = os.getenv('buildconfig')
riderver = os.getenv('riderver')

local_resource(
    'tool-restore-back2',
    'dotnet tool restore',
    labels=['back2']
)

local_resource(
    'build-back2',
    'dotnet publish -c {buildconf} -o out'.format(buildconf=buildconf),
    deps=['TiltDemoApi2'],
    ignore=['TiltDemoApi2/obj', 'TiltDemoApi2/bin'],
    resource_deps=['tool-restore-back2'],
    labels=['back2']
)

local_resource(
    'script-back2',
    'cp ./script.sh ./out/script.sh',
    resource_deps=['build-back2'],
    labels=['back2']
)

local_resource(
    'db-update-back2',
    'cd TiltDemoApi2 && dotnet ef database update',
    resource_deps=['script-back2', 'mssql'],
    labels=['back2']
)

docker_build_with_restart(
    'hello-tilt-back2',
    'out',
    entrypoint=['./script.sh'],
    dockerfile='Dockerfile',
    build_args={'RIDER_VER': riderver},
    live_update=[
        sync('out', '/app/out'),
    ],
)

k8s_yaml('kubernetes.yaml')
k8s_resource('hello-tilt-back2', port_forwards=['22001:22'], resource_deps=['db-update-back2'], labels=['back2'])
